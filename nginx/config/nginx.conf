
worker_processes  1;

events {
  worker_connections  1024;  ## Default: 1024
}

http{
    limit_req_zone $request_uri zone=by_uri:10m rate=5r/s;

    upstream fastapi {
        server fastapi;
    }

    server {
        listen 80;

        location  ~* "^/article/([0-9]+)" {
            resolver 127.0.0.11;
            limit_req zone=by_uri;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://fastapi:8000/article/$1;
        }

        location ~* ^/article/burst/([0-9]+) {
            resolver 127.0.0.11;
            limit_req zone=by_uri burst=20;
            limit_req_log_level error;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://fastapi:8000/article/$1;
        }

        location ~* ^/article/nodelay/([0-9]+)  {
            resolver 127.0.0.11;
            limit_req zone=by_uri burst=20 nodelay;
            limit_req_log_level error;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://fastapi:8000/article/$1;
        }
    }

}